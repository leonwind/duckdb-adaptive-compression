# name: test/sql/types/nested/struct/struct_of_lists_where.test
# description: Test WHERE clause with structs of lists
# group: [struct]

statement ok
PRAGMA enable_verification

statement ok
create table t1 (
	id int,
	k integer[],
	v decimal[]
);

statement ok
insert into t1
SELECT * FROM (VALUES
	(0, [1,2,3,4], [1.0, 2.0, 3.0, 4.0]),
	(1, [5,6,7,8], [5.0, 6.0, 7.0, 8.0]),
	(2, [9,10,11,12], [9.0, 10.0, 11.0, 12.0]),
	(3, [13,14,15,16], [13.0, 14.0, 15.0, 16.0]),
	(4, [17,18,19,20], [17.0, 18.0, 19.0, 20.0]),
	(5, [21,22,23,24], [21.0, 22.0, 23.0, 24.0]),
	(6, [25,26,27,28], [25.0, 26.0, 27.0, 28.0]),
	(7, [29,30,31,32], [29.0, 30.0, 31.0, 32.0]),
	(8, [33,34,35,36], [33.0, 34.0, 35.0, 36.0]),
	(9, [37,38,39,40], [37.0, 38.0, 39.0, 40.0])
)

statement ok
create table t2 (id int, v_map struct(key integer[], val decimal[]), k integer[]);

statement ok
insert into t2 select id, {'key': k, 'val': v}, k from t1;

query III
SELECT * FROM t2 order by id
----
0	{'key': [1, 2, 3, 4], 'val': [1.000, 2.000, 3.000, 4.000]}	[1, 2, 3, 4]
1	{'key': [5, 6, 7, 8], 'val': [5.000, 6.000, 7.000, 8.000]}	[5, 6, 7, 8]
2	{'key': [9, 10, 11, 12], 'val': [9.000, 10.000, 11.000, 12.000]}	[9, 10, 11, 12]
3	{'key': [13, 14, 15, 16], 'val': [13.000, 14.000, 15.000, 16.000]}	[13, 14, 15, 16]
4	{'key': [17, 18, 19, 20], 'val': [17.000, 18.000, 19.000, 20.000]}	[17, 18, 19, 20]
5	{'key': [21, 22, 23, 24], 'val': [21.000, 22.000, 23.000, 24.000]}	[21, 22, 23, 24]
6	{'key': [25, 26, 27, 28], 'val': [25.000, 26.000, 27.000, 28.000]}	[25, 26, 27, 28]
7	{'key': [29, 30, 31, 32], 'val': [29.000, 30.000, 31.000, 32.000]}	[29, 30, 31, 32]
8	{'key': [33, 34, 35, 36], 'val': [33.000, 34.000, 35.000, 36.000]}	[33, 34, 35, 36]
9	{'key': [37, 38, 39, 40], 'val': [37.000, 38.000, 39.000, 40.000]}	[37, 38, 39, 40]

query III
SELECT * FROM t2 where id>=4 order by id
----
4	{'key': [17, 18, 19, 20], 'val': [17.000, 18.000, 19.000, 20.000]}	[17, 18, 19, 20]
5	{'key': [21, 22, 23, 24], 'val': [21.000, 22.000, 23.000, 24.000]}	[21, 22, 23, 24]
6	{'key': [25, 26, 27, 28], 'val': [25.000, 26.000, 27.000, 28.000]}	[25, 26, 27, 28]
7	{'key': [29, 30, 31, 32], 'val': [29.000, 30.000, 31.000, 32.000]}	[29, 30, 31, 32]
8	{'key': [33, 34, 35, 36], 'val': [33.000, 34.000, 35.000, 36.000]}	[33, 34, 35, 36]
9	{'key': [37, 38, 39, 40], 'val': [37.000, 38.000, 39.000, 40.000]}	[37, 38, 39, 40]
